package EntityInfo;


import ItemInfo.*;
import java.util.Random;

/**
 *
 * @author 3004294
 */

/*
Change Log #1 :
- Removed Experience

Change Log #2 :
- Added Armor objects

Change Log #3 :
- Removed Special Atttack Object

Change Log #4 : 
- Added in class centric Special Attack method
- Added in ArrayLists for names, descriptions, damage of special Attack
        
Change Log #5 : 
- Added in Generator, JOption.
- Added in Skill Cost
- Added in Skill Damage
- Modified SP Method to remove Cost

Change Log #6 :
- Removed Energy'
- TEMP Remove Buff
- TEMP Remove Debuff
- TEMP Remove Element
- Set HEALTH to MAX_HEALTH
- Set ENERGY to MAX_ENERGY
- Remove Javax.Swing.* Import

*/

public class Pirate extends Entity { 
    
    protected String status = null;
    protected Armor hat;
    protected Armor shirt;
    protected Armor pant;
    protected Armor shoe;
    
    private String [] PArray = {"Critical Hit", "Cannon Barrage", "Send the Scurvy", "Deadshot Daiquiri"}; //names of the skills
    int [] PCArray = {4, 7, 5, 10}; //costs of the skills
    int [] PDMGArray = {20, 30, 10, 40};
    
    Random gen = new Random();
    
    public Pirate(String newName, double newEnergyRecovery, /*Element newElement, 
                  int newDebuff, int newBuff, /*SpecialAttack newSpecialAttack,*/ boolean canHeal, double newDamage
                , String newStatus, Armor newHat, Armor newShirt, Armor newPant, Armor newShoe) {
            super(newName, newEnergyRecovery, /*newElement, newDebuff, newBuff, newSpecialAttack,*/ canHeal, newDamage);
            health = MAX_HEALTH;
            energy = MAX_ENERGY;
            status = newStatus; // roles such as captain, medical, etc, doesnt really affect the game but sounds nice and quick to add
            hat = newHat;
            shirt = newShirt;
            pant = newPant;
            shoe = newShoe;
            
    }
    
    public void rankIncrementStats() { //unsure if used.
        health = health + (health * .2);
        energy = energy + (energy * .02);
        energyRecovery = energyRecovery + (energyRecovery * .01);
        rank = rank + 1;
        damage = damage  +(damage * .3);
                
    }
    
    public void specialAttack() {
        int y = gen.nextInt(4);
        System.out.println("You used ..." + PArray[y]);
        energy = energy - PCArray[y];
        
    }
    
    
}    


