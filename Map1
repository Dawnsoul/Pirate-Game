package MapInfo;

import java.util.*;
import ItemInfo.*;
import EntityInfo.*;

/*
Change Log #1 :
Fixed the package importation error and changed the necessar Array List

Change Log #2 : 
Changed Island names :))))

Change Log #3 :
Added chance to get armor for each location
Deleted item array list, and added material chances
Put randomized materials into generated special location
changed temp to armorChance

Change Log #4: 
Added random monster array list
added if statement for sailing
*/

/*
    //Names of Clothing
    private ArrayList<String> clothingNames = new ArrayList<String>(Arrays.asList
            ("Boot", "Belt", "Breeches", "Doublet", "Tri-Cornered Hat"
            , "Motley Shirt"));
    
    //Names of Weapons
    
    private ArrayList<String> weaponNames = new ArrayList<String>(Arrays.asList
            ("Cutlass", "Rapier", "Dagger", "Pike", "Axe"
            , "Revolver", "Flintlock", "Blunderbuss", "Musket"));
    */
    
    //Names of sea monsters
    
    
    //Names of land monsters
    
    //takes in difficulty and generates map
public class Map1
{
    private int progress;
    public final int totalDistance = 100;
    private ArrayList<SpecialLocation> locations = new ArrayList<SpecialLocation>();
    private ArrayList<String> placeNames = new ArrayList<String>(Arrays.asList
        ("Conomi Islands", "The Mighty Isles", "The Infernal Islands", 
        "West Blue", "Vrahz Ait", "Irf Atoll", "Swallow Island", 
        "Eems Archipelago", "Cremuz Archipelago", "Tryohst Enclave", 
        "The Neverending Key", "Dressrosa", "The Enchanted Key", 
        "The Sandy Skerry", "Yst Enclave", "Alabasta", 
        "Marine Ford", "Futohx Chain", "Wano Country", 
        "Tryfaq Enclave"));
    
  
    public void sail()
    {
        progress += 2;//2 naut miles taken
        for(SpecialLocation island : locations)
        {
            if(island.getLocation() <= progress && island.getLocation() > (progress - 2))
            {
                //must enact battle sequence for this island
            } else {
                int sMChance = (int)(2 * Math.random());
                if(sMChance == 1)
                {
                    //enact sea monster battle sequence
                }
            }
        }
        
    }
    
    public void createMap(int difficulty)
    {
        difficulty *= 5;
        int armorChance = 100;
        for(int x = 0; x < difficulty - 1; x++)
        {
            //Make a random generator to make monsters.
            ArrayList<Entity> monsters = new ArrayList<Entity>();
            for(int a = 0; a < 3; a++)
                monsters.add(LandMonster.createLM());
            
            //Determines if location will have armor or not
            int tempNum1 = (int)(100 * Math.random());
            boolean armor = (tempNum1 < armorChance) ? true : false;
            
            //Determines if the player will recieve a weapon upgrade or not
            int weaponMat = (int)(2 * Math.random());
            
            //determines if the player will recieve an armor upgrade or not
            int armorMat = (int)(3 * Math.random() + 1);
            
            //determines if the player will recieve a ship upgrade or not
            int shipMat = (int)(5 * Math.random() + 1);
            
            //special location requires location and monster list
            /*
                Attributes listed in order
                name
                distance
                monster
                armor
                weaponMaterials
                armorMaterials
                shipMaterials
            */
            locations.add(new SpecialLocation(
                    placeNames.get((placeNames.size() - 1) * (int)(Math.random())), 
                    totalDistance - (x * (totalDistance / difficulty)), 
                    monsters,
                    armor, 
                    weaponMat,
                    armorMat,
                    shipMat));
            
            //decreases chance to get armor each time a piece of armor is recieved
            if(armor)
            armorChance -= 25;
        }
    }
    
}
